name: CI-CD

on:
  workflow_dispatch:
  push:

permissions:
  id-token: write
  contents: read

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup .NET Core SDKs
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.0.x

      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build

  package:
    name: Package
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Lambda Tools
        run: dotnet tool install -g Amazon.Lambda.Tools

      - name: Package Project
        uses: ./.github/actions/package-project
        with:
          project-path: ./src/App.Api/CreateEvent
          output-directory: ./.output
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.run_id }}
          path: |
            ./cdk.json
            ./src/App.Stack/**/*
            ./.output
          retention-days: 1

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Download package
        uses: actions/download-artifact@v3
        with:
          name: ${{ github.run_id }}
          path: ./

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-north-1
          role-to-assume: ${{ secrets.DEPLOY_ROLE }}
          role-session-name: OIDCSession

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Setup CDK
        run: npm install -g aws-cdk

      - name: CDK Bootstrap
        run: cdk bootstrap
      - name: CDK Deploy
        run: cdk deploy --require-approval never